// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.2.0.0
//      SpecFlow Generator Version:2.2.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace ControleEmpresarial.Estoque.IntegrationTest.Produto.CadastrarProduto
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.2.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public partial class CadastrarUmaNovoProdutoFeature : Xunit.IClassFixture<CadastrarUmaNovoProdutoFeature.FixtureData>, System.IDisposable
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Xunit.Abstractions.ITestOutputHelper _testOutputHelper;
        
#line 1 "CadastrarUmNovoProduto.feature"
#line hidden
        
        public CadastrarUmaNovoProdutoFeature(CadastrarUmaNovoProdutoFeature.FixtureData fixtureData, Xunit.Abstractions.ITestOutputHelper testOutputHelper)
        {
            this._testOutputHelper = testOutputHelper;
            this.TestInitialize();
        }
        
        public static void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("pt-BR"), "Cadastrar uma novo produto", "\tO usuário fará o cadastro de um novo produto pelo site\r\n\tpreenchendo os campos n" +
                    "ecessários\r\n\tao terminar receberá uma notificacao \r\n\tde sucesso ou de falha", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Xunit.Abstractions.ITestOutputHelper>(_testOutputHelper);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        void System.IDisposable.Dispose()
        {
            this.ScenarioTearDown();
        }
        
        [Xunit.FactAttribute(DisplayName="Cadastrar produto com sucesso")]
        [Xunit.TraitAttribute("FeatureTitle", "Cadastrar uma novo produto")]
        [Xunit.TraitAttribute("Description", "Cadastrar produto com sucesso")]
        [Xunit.TraitAttribute("Category", "TesteAceitacaoCadastroProduto")]
        public virtual void CadastrarProdutoComSucesso()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Cadastrar produto com sucesso", new string[] {
                        "TesteAceitacaoCadastroProduto"});
#line 9
this.ScenarioSetup(scenarioInfo);
#line 10
 testRunner.Given("que o usuário está no site, na tela inicial, para cadastrar um novo produto", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 11
 testRunner.And("clica na tab Produto", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 12
 testRunner.And("clica no link Produtos", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 13
 testRunner.And("clica no link Novo Produto", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Campo",
                        "Valor"});
            table1.AddRow(new string[] {
                        "Codigo",
                        "TESTE"});
            table1.AddRow(new string[] {
                        "Cor",
                        "bicolor"});
            table1.AddRow(new string[] {
                        "Tamanho",
                        "12"});
            table1.AddRow(new string[] {
                        "Comprimento",
                        "0,68"});
            table1.AddRow(new string[] {
                        "Curvatura",
                        "5"});
            table1.AddRow(new string[] {
                        "ValorVenda",
                        "500,00"});
            table1.AddRow(new string[] {
                        "ValorCompra",
                        "365,98"});
            table1.AddRow(new string[] {
                        "DataEntrada",
                        "15/07/2017"});
            table1.AddRow(new string[] {
                        "Marca_Descricao",
                        "Marca Teste"});
            table1.AddRow(new string[] {
                        "Material_Descricao",
                        "Material"});
            table1.AddRow(new string[] {
                        "Categoria_Descricao",
                        "Categoria"});
#line 14
 testRunner.And("preenche os campos com os valores do produto", ((string)(null)), table1, "E ");
#line 27
 testRunner.When("clicar no botao registrar produto", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 28
 testRunner.Then("Recebe uma mensagem de cadastro de produto realizado com sucesso", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute(DisplayName="Cadastrar produto já existente no banco")]
        [Xunit.TraitAttribute("FeatureTitle", "Cadastrar uma novo produto")]
        [Xunit.TraitAttribute("Description", "Cadastrar produto já existente no banco")]
        public virtual void CadastrarProdutoJaExistenteNoBanco()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Cadastrar produto já existente no banco", ((string[])(null)));
#line 30
 this.ScenarioSetup(scenarioInfo);
#line 31
 testRunner.Given("que o usuário está no site, na tela inicial, para cadastrar um novo produto", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 32
 testRunner.And("clica na tab Produto", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 33
 testRunner.And("clica no link Produtos", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 34
 testRunner.And("clica no link Novo Produto", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Campo",
                        "Valor"});
            table2.AddRow(new string[] {
                        "Codigo",
                        "TESTE"});
            table2.AddRow(new string[] {
                        "Cor",
                        "bicolor"});
            table2.AddRow(new string[] {
                        "Tamanho",
                        "12"});
            table2.AddRow(new string[] {
                        "Comprimento",
                        "0,68"});
            table2.AddRow(new string[] {
                        "Curvatura",
                        "5"});
            table2.AddRow(new string[] {
                        "ValorVenda",
                        "500,00"});
            table2.AddRow(new string[] {
                        "ValorCompra",
                        "365,98"});
            table2.AddRow(new string[] {
                        "DataEntrada",
                        "15/07/2017"});
            table2.AddRow(new string[] {
                        "Marca_Descricao",
                        "Marca Teste"});
            table2.AddRow(new string[] {
                        "Material_Descricao",
                        "Material"});
            table2.AddRow(new string[] {
                        "Categoria_Descricao",
                        "Categoria"});
#line 35
 testRunner.And("preenche os campos com os valores do produto", ((string)(null)), table2, "E ");
#line 49
 testRunner.When("clicar no botao registrar produto", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 50
 testRunner.Then("Recebe uma mensagem de erro pois o produto já existe no banco", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute(DisplayName="Cadastrar produto sem código")]
        [Xunit.TraitAttribute("FeatureTitle", "Cadastrar uma novo produto")]
        [Xunit.TraitAttribute("Description", "Cadastrar produto sem código")]
        public virtual void CadastrarProdutoSemCodigo()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Cadastrar produto sem código", ((string[])(null)));
#line 52
 this.ScenarioSetup(scenarioInfo);
#line 53
 testRunner.Given("que o usuário está no site, na tela inicial, para cadastrar um novo produto", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 54
 testRunner.And("clica na tab Produto", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 55
 testRunner.And("clica no link Produtos", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 56
 testRunner.And("clica no link Novo Produto", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Campo",
                        "Valor"});
            table3.AddRow(new string[] {
                        "Codigo",
                        ""});
            table3.AddRow(new string[] {
                        "Cor",
                        "bicolor"});
            table3.AddRow(new string[] {
                        "Tamanho",
                        "12"});
            table3.AddRow(new string[] {
                        "Comprimento",
                        "0,68"});
            table3.AddRow(new string[] {
                        "Curvatura",
                        "5"});
            table3.AddRow(new string[] {
                        "ValorVenda",
                        "500,00"});
            table3.AddRow(new string[] {
                        "ValorCompra",
                        "365,98"});
            table3.AddRow(new string[] {
                        "DataEntrada",
                        "15/07/2017"});
            table3.AddRow(new string[] {
                        "Marca_Descricao",
                        "Marca Teste"});
            table3.AddRow(new string[] {
                        "Material_Descricao",
                        "Material"});
            table3.AddRow(new string[] {
                        "Categoria_Descricao",
                        "Categoria"});
#line 57
 testRunner.And("preenche os campos com os valores do produto", ((string)(null)), table3, "E ");
#line 70
 testRunner.When("clicar no botao registrar produto", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 71
 testRunner.Then("Recebe uma mensagem de erro pois o produto não possui codigo", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.2.0.0")]
        [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        public class FixtureData : System.IDisposable
        {
            
            public FixtureData()
            {
                CadastrarUmaNovoProdutoFeature.FeatureSetup();
            }
            
            void System.IDisposable.Dispose()
            {
                CadastrarUmaNovoProdutoFeature.FeatureTearDown();
            }
        }
    }
}
#pragma warning restore
#endregion
